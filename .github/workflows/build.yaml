# Name of your workflow.
name: build
# Trigger the workflow on push or pull request.
on: [push, pull_request]
# A workflow run is made up of one or more jobs.
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - run: flutter pub get
      - run: ./scripts/format.sh
      - run: flutter test
  # id of job, a string that is unique to the "jobs" node above.
  drive:
    env:
      working-directory: ./example
    # Creates a build matrix for your jobs. You can define different
    # variations of an environment to run each job in.
    strategy:
      # A set of different configurations of the virtual environment.
      matrix:
        device:
        - "iPhone 8 (13.3)"
        - "iPhone 11 Pro Max (13.3)"
      # When set to true, GitHub cancels all in-progress jobs if any matrix job fails.
      fail-fast: false
    # The type of machine to run the job on.
    runs-on: macOS-latest
    # Contains a sequence of tasks.
    steps:
    # A name for your step to display on GitHub.
    - name: "List all simulators"
      run: "xcrun instruments -s"
    - name: "Start Simulator"
      run: |
        UDID=$(
          xcrun instruments -s |
          awk \
            -F ' *[][]' \
            -v 'device=${{ matrix.device }}' \
            '$1 == device { print $2 }'
        )
        xcrun simctl boot "${UDID:?No Simulator with this name found}"
    - uses: actions/checkout@v1
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta'
    - name: "Run Flutter Driver tests"
      run: "pwd"
      run: "flutter drive --target=test_driver/app.dart"
